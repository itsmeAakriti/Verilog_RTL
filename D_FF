module flipflops(
    input clock,
    input d,
    output reg q
  
);
reg q1;
    always @(posedge clock ) begin
              
              q1 <= d;
        end
         always @(posedge clock ) begin
                     
                     q <= q1;
               end
 
endmodule
----------------------------------------------------------------------------------------------------------------------------------
module flipflops(
    input clock,
    input d,
    input reset,
    output reg q
  
);
    always @(posedge clock) begin
        if (reset) begin
            q <= 0;
        end else begin
            q <= d;
        end
    end
endmodule
___--------------------------------------------------------------------------------------
module flipflops(
    input clock,
    input d,
    input reset,
    output reg q
  
);
    always @(posedge clock or posedge reset) begin
        if (reset) begin
            q <= 0;
        end else begin
              q <= d;
        end
    end
endmodule
-------------------------------------------------------------------------------------------------------------

module flipfloptb(

    );
    reg clock,d,reset;
    wire q;
    flipflops sr(clock,d,reset,q);
    initial begin
    clock=0;
    d=0;
    reset=1;
    end
    always
    begin
    #2 clock=~clock;
    end
    initial begin
    #10
    d=1;
    reset=0;
    #10
    d=0;;
    reset=0;
    #3
    reset=1;
    d=1;
    #10
    reset=0;
  
    #10
    $finish;
    end
    
endmodule
